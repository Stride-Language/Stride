
type _DomainDefinition {
	typeName: "_domainDefinition"
	properties: [
		typeProperty DomainName {
			name: "domainName"
			types: ["CSP"]
			default: none
			required: on
		},
        typeProperty Substitutions {
			name: "substitutions"
			types: [""] # Allow list
			default: []
			required: off
		},
		typeProperty Framework {
			name: "framework"
			types: ["CSP", ""] # Allow _Platform
			default: none
			required: on
		},
		typeProperty DomainRate {
			name: "rate"
			types: ["CRP", "CIP", ""]
			default: none
			required: on
			meta: "The domain's rate. A value of none indicates an asynchronous or immediate domain."
		},
		typeProperty GlobalsTag {
			name: "globalsTag"
			types: ["CSP"]
			default: "Includes"
			required: off
		},
		typeProperty DeclarationsTag {
			name: "declarationsTag"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty ProcessingTag {
			name: "processingTag"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty InitializationTag {
			name: "initializationTag"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty CleanupTag {
			name: "cleanupTag"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty DomainIncludes {
			name: "domainIncludes"
			types: [""] # Should take a list
			default: ""
			required: off
		},
		typeProperty DomainDeclarations {
			name: "domainDeclarations"
			types: [""]
			default: ""
			required: off
		},
		typeProperty DomainInitialization {
			name: "domainInitialization"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty DomainFunction {
			name: "domainFunction"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty DomainCleanup {
			name: "domainCleanup"
			types: ["CSP"]
			default: ""
			required: off
		}
	]
#	inherits: [_Base]
}

type _Domain {
	typeName: "_domain"
	properties: [
		typeProperty Name {
			name: "domainName"
			types: ["CSP", ""]
			default: none
			required: on
		},
		typeProperty Platform {
			name: "platform"
			types: ["CSP", ""] # TODO allow _Platform
			default: none
			required: off
		}
	]
#	inherits: [_Base]
}

type _DomainProcessing {
	typeName: "_domainProcessing"
	properties: [
		typeProperty DomainStreams {
			name: "domainStreams"
			types: [""]
			default: none
			required: on
		}
	]
}

type _FrameworkDescription {
	typeName: "_frameworkDescription"
	properties: [
		typeProperty FrameworkName {
			name: "frameworkName"
			types: ["CSP"]
			default: none
			required: on
		}
	]
	inherits: [_Base]
}

type _PlatformModuleType {
	typeName: "platformModule"
	properties: [
		typeProperty Include {
			name: "include"
			types: [""] #TODO accepts list
			default: []
			required: off
		},
		typeProperty IncludeDir {
			name: "includeDir"
			types: [""] #TODO accepts list
			default: []
			required: off
		},
		typeProperty LinkTo {
			name: "linkTo"
			types: [""] #TODO accepts list
			default: []
			required: off
		},
		typeProperty LinkDir {
			name: "linkDir"
			types: [""] #TODO accepts list
			default: []
			required: off
		},
		typeProperty Inputs {
			name: "inputs"
			types: [""] #TODO accepts list
			default: []
			required: off
		},
		typeProperty Outputs {
			name: "outputs"
			types: [""]
			default: []
			required: off
		},
		typeProperty GlobalDeclarations {
			name: "globalDeclarations"
			types: [""] #TODO validate list
			default: []
			required: off
		},
		typeProperty GlobalInitializations {
			name: "globalInitializations"
			types: [""] #TODO validate list
			default: []
			required: off
		},
		typeProperty Declarations {
			name: "declarations"
			types: [""] #TODO validate list
			default: []
			required: on
		},
		typeProperty Constructors {
			name: "constructors"
			types: [""] #TODO validate list
			default: []
			required: off
		},
		typeProperty Initializations {
			name: "initializations"
			types: [""] #TODO validate list
			default: []
			required: on
		},
		typeProperty PreProcessingOnce {
			name: "preProcessingOnce"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty PreProcessing {
			name: "preProcessing"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty Processing {
			name: "processing"
			types: ["CSP"]
			default: none
			required: on
		},
		typeProperty PostProcessing {
			name: "postProcessing"
			types: ["CSP"]
			default: ""
			required: on
		},
		typeProperty PostProcessingOnce {
			name: "postProcessingOnce"
			types: ["CSP"]
			default: ""
			required: on
		},
		typeProperty Cleanup {
			name: "cleanup"
			types: ["CSP"]
			default: ""
			required: off
		},
#		typeProperty Framework {
#			name: "framework"
#			types: [""] #
#			default: none
#			required: on
#		},
		typeProperty Domain {
			name: "domain"
			types: [""] #
			default: none
			required: off
		},
		typeProperty AllowedDomains {
			name: "allowedDomains"
			types: [""] #
			default: none
			required: off
		}
	]
	inherits: [_Base]
}

type _PlatformBlockType {
	typeName: "platformBlock"
	properties: [ 
		typeProperty TypeName {
			name: "typeName"
			types: ["CSP"]
			default: none
			required: on
		},
        typeProperty Rate {
			name: "rate"
			types: [""] #
			default: -1
			required: off
		}
	]
	inherits: [_PlatformModuleType]
}


type _PlatformType {
	typeName: "platform"
	properties: [
		typeProperty Framework {
			name: "framework"
			types: ["CSP"]
			default: none
			required: on
		},
		typeProperty FrameworkVersion {
			name: "frameworkVersion"
			types: ["CSP"]
			default: none
			required: off
		},
		typeProperty Hardware {
			name: "hardware"
			types: ["CSP"]
			default: none
			required: off
		},
		typeProperty HardwareVersion {
			name: "hardwareVersion"
			types: ["CSP"]
			default: none
			required: off
		},
		typeProperty Required {
			name: "required"
			types: ["CBP"]
			default: none
			required: on
		}
	]
}

type _ConnectionType {
	typeName: "connection"
	properties: [
		typeProperty Source {
			name: "source"
			types: [""]
			default: none
			required: on
		},
		typeProperty Destination {
			name: "destination"
			types: [""]
			default: none
			required: on
		},
		typeProperty SourceImports {
			name: "sourceImports"
			types: [""]
			default: none
			required: off
		},
		typeProperty SourceStreams {
			name: "sourceStreams"
			types: [""]
			default: none
			required: on
		},
		typeProperty DestinationImports {
			name: "destinationImports"
			types: [""]
			default: none
			required: off
		},
		typeProperty DestinationStreams {
			name: "destinationStreams"
			types: [""]
			default: none
			required: on
		}
	]
}


type _SystemType {
	typeName: "system"
	properties: [
		typeProperty Platforms {
			name: "platforms"
			types: [""]
			default: none
			required: on
		},
		typeProperty Connections {
			name: "connections"
			types: [""]
			default: none
			required: off
		}
	]
}
