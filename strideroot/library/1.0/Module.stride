type _MainInputPort {
	typeName: "mainInputPort"
	inherits: ["port", "_portAttributes"]
	meta: ""
}

type _MainOutputPort {
	typeName: "mainOutputPort"
	inherits: ["port", "_portAttributes"]
	meta: ""
}

type _PropertyInputPort {
	typeName: "propertyInputPort"
	properties: [
		typeProperty Default {
			name: "default"
			types: [""]
			default: none
			required: off
		}
	]
	inherits: ["port", "_portAttributes"]
	meta: ""
}

type _PropertyOutputPort {
	typeName: "propertyOutputPort"
	properties: [
		typeProperty Default {
			name: "default"
			types: [""]
			default: none
			required: off
		}
	]
	inherits: ["port", "_portAttributes"]
	meta: ""
}

type _PortAttributes {
	typeName: "_portAttributes"
	properties: [
		typeProperty Rate {
			name: "rate"
			types: [""]
			default: 0
			required: off
		},
		typeProperty Domain {
			name: "domain"
			types: [""] # This should be made to accept type handles
			default: none
			required: off
		},
		typeProperty Size {
			name: "size"
			types: [""] # This should be made to accept type handles
			default: none
			required: off
		}
	]
	inherits: [""]
	meta: ""
}

type _Port {
	typeName: "port"
	properties: [
		typeProperty Name {
			name: "name"
			types: ["CSP"]
			default: ""
			required: off
		},
		typeProperty Block {
			name: "block"
			types: [""] # This should be made to accept type handles
			default: none
			required: on
		},
		typeProperty Type {
			name: "type"
			types: ["CSP"] # This should be made to accept type handles
			default: "real"
			required: off
		}
	]
	inherits: ["base"]
	meta: ""
}


type _Module {
	typeName: "module"
	properties: [
		typeProperty Ports {
			name: "ports"
			types: [ "" ]  # TODO: How can we define list types here?
			default: none
			required: on
		},
		typeProperty Blocks {
			name: "blocks"
			types: [""] # TODO how to accept lists?
			default: []
			required: on
		},
		typeProperty Streams {
			name: "streams"
			types: [""]
			default: none
			required: on
		},
		typeProperty Contraints {
			name: "constraints"
			types: [""]
			default: none
			required: off
		}
	]
	inherits: ["domainMember"]
	meta: "Modules encapsulate streams"
}

type _Reaction {
	typeName: "reaction"
	properties: [
		typeProperty Ports {
			name: "ports"
			types: [ "" ]  # TODO: How can we define list types here?
			default: none
			required: off
		},
		typeProperty Blocks { # User shouldn't have access to this set of blocks, how to implement that?
			name: "blocks"
			types: [""] # TODO how to accept lists?
			default: []
			required: on
		},
		typeProperty Streams {
			name: "streams"
			types: [""]
			default: none
			required: on
		}
	]
	inherits: ["domainMember"]
}

type _Loop {
	typeName: "loop"
	properties: [
		typeProperty Ports {
			name: "ports"
			types: [ "" ]
			default: none
			required: off
		},
		typeProperty Blocks { 
			name: "blocks"
			types: [""] 
			default: []
			required: on
		},
		typeProperty Streams {
			name: "streams"
			types: [""]
			default: none
			required: on
		},
		typeProperty OnExecute {
			name: "onExecute"
			types: [""]
			default: none
			required: off
		},
		typeProperty OnTermination {
			name: "onTermination"
			types: [""]
			default: none
			required: off
		},
		typeProperty TerminateWhen {
			name: "terminateWhen"
			types: [""]
			default: none
			required: off
		}
	]
	inherits: ["domainMember"]
}
